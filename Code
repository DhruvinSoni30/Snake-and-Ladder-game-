
package snakeandladder;

import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;


public class SnakeAndLadder {

   public static void main(String[] args) {
       
        SnakeNLadder s = new SnakeNLadder();
        s.startGame();
    }
}
 class SnakeNLadder
 {
     final static int winpoint = 100;
     
     static Map<Integer,Integer> snake = new HashMap<Integer,Integer>();
     static Map<Integer,Integer> ladder = new HashMap<Integer,Integer>();
     {
     
     snake.put(90,45);
     snake.put(67,40);
     snake.put(30,12);
     snake.put(78,51);
     snake.put(88,23);
     
     ladder.put(25,49);
     ladder.put(5,50);
     ladder.put(10,30);
     ladder.put(16,41);
     ladder.put(34,65);
     }
     
     public int rolldice()
     {
         int n = 0;
         Random rnd = new Random();
         n = rnd.nextInt(6);
         n = n+1;
         System.out.println("You Got:"+n);
         return n;
     }
    public void startGame()
	{
		int player1 =0, player2=0;
		int currentvalue=-1;
		Scanner s = new Scanner(System.in);
		String str;
		int diceValue =0;
		do
		{
			System.out.println(currentvalue == -1?"\n\nFIRST PLAYER TURN":"\n\nSECOND PLAYER TURN");
			System.out.println("Press r to roll Dice");
			str = s.next();
			diceValue = rolldice();
			
			
			if(currentvalue == -1)
			{
				player1 = calculateplayervalue(player1,diceValue);
				System.out.println("First Player :: " + player1);
				System.out.println("Second Player :: " + player2);
				System.out.println("------------------");
				if(isWin(player1))
				{
					System.out.println("First player wins");
					return;
				}
			}
			else
			{
				player2 = calculateplayervalue(player2,diceValue);
				System.out.println("First Player :: " + player1);
				System.out.println("Second Player :: " + player2);
				System.out.println("------------------");
				if(isWin(player2))
				{
					System.out.println("Second player wins");
					return;
                                }
			}
			
			currentvalue= -currentvalue;
			
			
			
		}while("r".equals(str));
	}
	

    private int calculateplayervalue(int player, int dicevalue) {
       player = player + dicevalue;
       
       if(player > winpoint)
       {
           player = player - dicevalue;
           return player;
       }
       if(null != snake.get(player))
       {
           System.out.println("Snake is here");
           player = snake.get(player);
       }
       
       if(null != ladder.get(player))
       {
           System.out.println("Ladder is here");
           player = ladder.get(player);
       }
       return player;
   }
 

    private boolean isWin(int player) {
       
       return winpoint == player;
    }
 }
